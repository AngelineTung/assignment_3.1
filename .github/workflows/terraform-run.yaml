# .github/workflows/terraform-deploy.yml
name: Terraform Deployment

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write   # needed for SARIF upload

env:
  AWS_REGION: ap-southeast-1
  TF_BACKEND_BUCKET: my-tfstate-bucket-prod
  TF_BACKEND_KEY: terraform/terraform.tfstate
  TF_BACKEND_LOCK: my-tf-locks-prod

jobs:
  CICD:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .github/workflows/terraform   # <â€” your actual TF folder

    steps:
      - uses: actions/checkout@v4

      # ---------- Security scan (Trivy) ----------
      - name: Trivy scan (IaC + secrets + vuln)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'                 # scan current folder (because of working-directory)
          scan-ref: '.'                   # '.' == .github/workflows/terraform
          scanners: 'vuln,secret,config'  # SCA, secret leaks, IaC/misconfig checks
          security-checks: 'vuln,secret,config'
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'
          exit-code: '0'                  # change to '1' to fail the build on findings

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/.github/workflows/terraform/trivy-results.sarif

      # ---------- Terraform ----------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init (remote backend)
        run: |
          terraform init \
            -backend-config="bucket=${TF_BACKEND_BUCKET}" \
            -backend-config="key=${TF_BACKEND_KEY}" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TF_BACKEND_LOCK}" \
            -backend-config="encrypt=true"

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply --auto-approve
